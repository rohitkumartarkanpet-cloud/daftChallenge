---
title: "DAFT Package Challenge"
subtitle: "Recreating the Scurvy DAGs with Beautiful Visualizations"
format:
  html: default
execute:
  echo: true
  eval: true
---

# 🎨 DAFT Package Challenge - Recreating the Scurvy DAGs

::: {.callout-important}
## 📊 Challenge Requirements In Section [Student Analysis Section](#student-analysis-section)
- Recreate all three scurvy DAGs using DAFT programming
- Optional: Demonstrate understanding of DAFT customization options
:::

## The Problem: Mastering Probabilistic Graphical Models with DAFT

**Core Question:** How can we use the DAFT package to create visually appealing Directed Acyclic Graphs (DAGs) that tell a compelling data story?

**The Challenge:** You'll recreate three historical DAGs depicting the fascinating story of how we lost and rediscovered the cure to scurvy. This challenge teaches you to use DAFT for creating professional-quality probabilistic graphical models.

**Our Approach:** We'll work through the three different understandings of the scurvy data generating process, learning DAFT customization techniques while exploring a crucial moment in medical history.

::: {.callout-warning}
## ⚠️ AI Partnership Required

This challenge pushes boundaries intentionally. You'll tackle problems that normally require weeks of study, but with Cursor AI as your partner (and your brain keeping it honest), you can accomplish more than you thought possible.

**The new reality:** The four stages of competence are Ignorance → Awareness → Learning → Mastery. AI lets us produce Mastery-level work while operating primarily in the Awareness stage. I focus on awareness training, you leverage AI for execution, and together we create outputs that used to require years of dedicated study.
:::

## The Scurvy Story: A Data Science Tragedy

Scurvy was a devastating disease that affected sailors on long voyages. The cure was discovered in 1747, but due to a misunderstanding about the cause, the cure was lost for over 150 years. The story involves three different understandings of the data generating process:

1. **1747 Understanding:** Lemons prevent scurvy (correct but incomplete!)
2. **Misguided Belief:** Acid kills bacteria that causes scurvy (wrong!)
3. **1928 Understanding:** Vitamin C prevents scurvy (the real mechanism)

## Environment Setup

First, let's install the DAFT package and set up our environment:

```{python}
#| label: setup-environment
#| echo: true
#| message: false
#| warning: false

# Install DAFT package (run this in terminal if not already installed)
# pip install 'daft-pgm'

import daft
import matplotlib.pyplot as plt
import numpy as np

# Set up plotting parameters for better quality
plt.rcParams['figure.dpi'] = 150
plt.rcParams['savefig.dpi'] = 300

print("DAFT package imported successfully!")
print("Ready to create beautiful DAGs!")



```

::: {.callout-note}
## 💡 Understanding DAFT

**DAFT (Directed Acyclic Factor Graphs Toolkit)** is a Python package for creating probabilistic graphical models. It's particularly useful for:

- Creating Directed Acyclic Graphs (DAGs)
- Visualizing causal relationships
- Communicating data generating processes
- Creating publication-quality figures

**Key DAFT Concepts:**

- **Nodes:** Represent variables or factors
- **Edges:** Show relationships between variables
- **Plates:** Indicate repeated structures
- **Styling:** Customize colors, shapes, and formatting
:::

## The Three DAGs: Your Mission

Your task is to recreate these three historical DAGs using DAFT, making them visually appealing and professionally formatted.

### DAG 1: The 1747 Understanding (Correct but Incomplete)

**Historical Context:** In 1747, James Lind discovered that lemons prevent scurvy through a controlled experiment. However, the understanding was incomplete - they knew lemons worked but not why.

**Your Task:** Recreate this DAG showing the relationship between lemons and scurvy prevention.

**Reference Image:**
![](https://raw.githubusercontent.com/flyaflya/persuasive/642288ea5f79050c05801c3d127084ac0f361a01/images/scurvy2.png)

```{python}
import os
import daft
import matplotlib.pyplot as plt

# Make the figures look sharper
plt.rcParams['figure.dpi'] = 150
plt.rcParams['savefig.dpi'] = 300

# Make sure the output folder exists so saving doesn't fail
os.makedirs("img", exist_ok=True)

def render_and_save(pgm, title, outfile):
    # Helper to render and save a DAG figure
    plt.figure(figsize=(4,3))
    pgm.render()
    plt.title(title, fontsize=12)
    plt.tight_layout()
    plt.savefig(outfile, dpi=300, bbox_inches="tight")
    plt.show()
```


```{python}
# DAG 1 (Styled): 1747 Understanding (Lemons prevent scurvy - correct but incomplete)

pgm_1747_style = daft.PGM(
    dpi=150,
    shape=[4,3],
    origin=[0,0],
    alternate_style="outer"
)

# Lemons node
pgm_1747_style.add_node(
    "lemons",
    "Lemons",
    1, 2,
    aspect=2.8,
    scale=1.1,
    plot_params={
        "facecolor": "lightgoldenrodyellow",
        "edgecolor": "goldenrod",
        "linewidth": 2,
        "alpha": 0.9,
    }
)

# Scurvy node
pgm_1747_style.add_node(
    "scurvy",
    "Scurvy",
    3, 2,
    aspect=2.8,
    scale=1.1,
    plot_params={
        "facecolor": "mistyrose",
        "edgecolor": "firebrick",
        "linewidth": 2,
        "alpha": 0.9,
    }
)

# Arrow: Lemons -> Scurvy
pgm_1747_style.add_edge("lemons", "scurvy")

# Render and save styled plot
render_and_save(
    pgm_1747_style,
    title="1747 Understanding: Lemons prevent scurvy (incomplete model)",
    outfile="img/dag_1747_styled.png"
)
```

**1747 Understanding (James Lind):**  
Sailors with scurvy were given citrus (like lemons) and recovered.  
So the belief was basically: lemons → prevent scurvy.

This model was **correct in outcome** (lemons *do* prevent scurvy),  
but **incomplete**, because they didn’t understand *why* it worked yet.
They just knew “lemons fix it.”

### DAG 2: The Misguided Belief (Wrong Understanding)

**Historical Context:** Over time, people came to believe it was the acid in lemons that killed bacteria which was causing scurvy. This led to lemons being replaced by limes (cheaper but less Vitamin C) or just using acids like vinegar, causing scurvy to return.

**Your Task:** Recreate this DAG showing the incorrect understanding of the data generating process.

**Reference Image:**
![](https://raw.githubusercontent.com/flyaflya/persuasive/8aaffd0a3c967d0a26f506232f998130847be3e8/images/scurvy.png)

```{python}
#| label: dag-2-misguided
#| echo: true
# DAG 2 (Styled): Misguided Belief
# Historical story:
# People thought it was the acid that killed bacteria, and that killing bacteria prevented scurvy.
# This was WRONG. It led people to replace lemons with cheaper acidic stuff (like vinegar or limes),
# and scurvy came back.

pgm_bad_style = daft.PGM(
    dpi=150,
    shape=[6,3],
    origin=[0,0],
    alternate_style="outer"
)

# Node: Acid
pgm_bad_style.add_node(
    "acid",
    "Acid",
    1, 2,
    aspect=2.8,
    scale=1.1,
    plot_params={
        "facecolor": "moccasin",
        "edgecolor": "darkorange",
        "linewidth": 2,
        "alpha": 0.9,
    }
)

# Node: Bacteria in Food
pgm_bad_style.add_node(
    "bacteria",
    "Bacteria\nin Food",
    3, 1.5,
    aspect=2.8,
    scale=1.1,
    plot_params={
        "facecolor": "peachpuff",
        "edgecolor": "orangered",
        "linewidth": 2,
        "alpha": 0.9,
    }
)

# Node: Scurvy
pgm_bad_style.add_node(
    "scurvy",
    "Scurvy",
    5, 1,
    aspect=2.8,
    scale=1.1,
    plot_params={
        "facecolor": "mistyrose",
        "edgecolor": "firebrick",
        "linewidth": 2,
        "alpha": 0.9,
    }
)

# Edges: Acid -> Bacteria -> Scurvy
pgm_bad_style.add_edge("acid", "bacteria")
pgm_bad_style.add_edge("bacteria", "scurvy")

# Render and save to file
render_and_save(
    pgm_bad_style,
    title="Misguided Belief: Acid kills bacteria -> prevents scurvy (WRONG)",
    outfile="img/dag_misguided_styled.png"
)

```

**Misguided Belief (Wrong Theory):**  
People later claimed the acid was killing bacteria, and *that* is why scurvy went away.
So they thought:  
Acid → kills bacteria in food → no scurvy.

This was **wrong**.  
They started using cheaper acidic things (like limes, vinegar) instead of real citrus high in Vitamin C.  
Result: scurvy came back, because removing bacteria wasn't the real mechanism.
### DAG 3: The 1928 Understanding (Complete and Correct)

**Historical Context:** In 1928, the true mechanism was discovered - it was Vitamin C (ascorbic acid) that prevented scurvy. This complete understanding finally explained why lemons worked and why the acid theory was wrong.

**Your Task:** Recreate this DAG showing the complete and correct understanding of the scurvy data generating process.

**Reference Image:**
![](https://raw.githubusercontent.com/flyaflya/persuasive/main/images/scurvy3.png)

```{python}
#| label: dag-3-1928
#| echo: true

# DAG 3 (Styled): 1928+ Correct Understanding
# Historical story:
# By ~1928 and into the 1930s, scientists figured out that scurvy is caused by
# vitamin C deficiency. Vitamin C is needed for proper collagen synthesis.
# Without collagen, tissues break down → scurvy.
#
# So the true causal story is: Vitamin C -> Collagen Synthesis -> Prevents Scurvy.

pgm_1928_style = daft.PGM(
    dpi=150,
    shape=[7,3],
    origin=[0,0],
    alternate_style="outer"
)

# Node: Vitamin C
pgm_1928_style.add_node(
    "vitc",
    "Vitamin C",
    1, 2,
    aspect=2.8,
    scale=1.1,
    plot_params={
        "facecolor": "lightgreen",
        "edgecolor": "darkgreen",
        "linewidth": 2,
        "alpha": 0.9,
    }
)

# Node: Collagen Synthesis
pgm_1928_style.add_node(
    "collagen",
    "Collagen\nSynthesis",
    3, 1.5,
    aspect=2.8,
    scale=1.1,
    plot_params={
        "facecolor": "lightblue",
        "edgecolor": "navy",
        "linewidth": 2,
        "alpha": 0.9,
    }
)

# Node: Scurvy
pgm_1928_style.add_node(
    "scurvy",
    "Scurvy",
    5, 1,
    aspect=2.8,
    scale=1.1,
    plot_params={
        "facecolor": "lavender",
        "edgecolor": "purple",
        "linewidth": 2,
        "alpha": 0.9,
    }
)

# Edges: Vitamin C -> Collagen Synthesis -> Scurvy
pgm_1928_style.add_edge("vitc", "collagen")
pgm_1928_style.add_edge("collagen", "scurvy")

# Render and save to file
render_and_save(
    pgm_1928_style,
    title="1928+: Vitamin C → Collagen → prevents scurvy (correct mechanism)",
    outfile="img/dag_1928_styled.png"
)
```
**1928+ Scientific Understanding (Correct Mechanism):**  
Researchers finally identified the true mechanism:
Vitamin C is required for proper collagen synthesis.
Without collagen repair, tissues break down → scurvy.

So the real causal story is:
Vitamin C → Collagen synthesis → Prevents scurvy.

This explains EVERYTHING:
- Why lemons worked in 1747 (they had Vitamin C 💡)
- Why “it’s just acid killing bacteria” was wrong
- How to *actually* prevent and cure scurvy

## Student Requirements Section: Mastering DAFT Visualization {#student-analysis-section}

**Your Task:** Demonstrate your mastery of DAFT through comprehensive recreation of the three scurvy DAGs and thoughtful analysis. The bulk of your grade comes from successfully recreating the DAGs and answering the discussion questions.

::: {.callout-important}
## 📊 Challenge Requirements

**Complete all DAG recreation sections:**

1. **DAG 1 (1747):** Lemons prevent scurvy - correct but incomplete
2. **DAG 2 (Misguided):** Acid kills bacteria - wrong understanding  
3. **DAG 3 (1928):** Vitamin C prevents scurvy - complete and correct
4. **Optional:** Add a little professional styling to the DAGs to make them more visually appealing (example: use nice fill colors and/or enclose the text in the ellipse completely).
:::

### Professional Quality Standards

**Your DAGs should:**

- (90% grade): Accurately recreate the reference images
- (100% grade): Add professional colors and possibly play with shapes to make it more visually appealing (example: use nice fill colors and/or enclose the text in the ellipse completely). Erase everything but the story of scurvy and the three DAGs
- Include clear, readable labels
- Demonstrate understanding of DAFT customization options
- Be suitable for a business or academic audience

### Example: Professional DAFT Node Styling

Here's an example (see @fig-example-node) of how to create a professionally styled node in DAFT with nice captions and references to the figure:

```{python}
#| label: fig-example-node
#| echo: true
#| fig-cap: "Example: Professional DAFT Node Styling"

import daft
import matplotlib.pyplot as plt

# Create a PGM object
pgm = daft.PGM(dpi=150, alternate_style="outer")

# Example of a professionally styled node
pgm.add_node("vitamin_c", "Vitamin C\nIntake" + r" $(X)$", 1, 1, aspect = 3, scale = 1.1,
             plot_params={
                 'facecolor': 'lightgreen', 
                 'edgecolor': 'darkgreen', 
                 'linewidth': 2,
                 'alpha': 0.8,
             })
pgm.add_node("health", "Healthiness\n"+r" $(Y)$", 3.25, 1, aspect = 3, scale = 1.1,
             plot_params={
                 'facecolor': 'thistle', 
                 'edgecolor': 'purple', 
                 'linewidth': 2,
                 'alpha': 0.8,
             })
pgm.add_edge("vitamin_c", "health")

pgm.render()
```

**Key Styling Parameters:**

- `facecolor`: Background color of the node
- `edgecolor`: Border color of the node  
- `linewidth`: Thickness of the border
- `alpha`: Transparency (0.0 to 1.0)
- `fontsize`: Size of text inside the node
- `aspect`: Width/height aspect ratio of the node (default: 1.0)
- `scale`: Height of the node (default: 1.0)

## Getting Started: Repository Setup 🚀

::: {.callout-important}
## 📁 Getting Started

**Step 1:** Create a new repository in your GitHub account named "daftChallenge" (forked from [https://github.com/flyaflya/daftChallenge](https://github.com/flyaflya/daftChallenge))

**Step 2:** Clone your repository locally using Cursor (or VS Code)

**Step 3:** Be sure to install DAFT in your environment: `pip install 'daft-pgm'`.

**Step 4:** Modify your local copy of this `index.qmd` file  to complete the challenge and get it to be a github pages website.
:::

### Getting Started Tips

## Key DAFT Resources

**Essential DAFT Documentation:**

- [DAFT Documentation](https://docs.daft-pgm.org/en/latest/)
- [DAFT Examples](https://docs.daft-pgm.org/en/latest/examples/)
- [Matplotlib Colors](https://matplotlib.org/stable/gallery/color/named_colors.html)

**Key DAFT Parameters to Explore:**

- `plot_params`: Dictionary of matplotlib parameters for styling
- `aspect`: Controls node width (default: 1.0)
- `scale`: Controls node size (default: 1.0)
- `fontsize`: Text size in the node
- `alternate`: Use alternative node shape (True/False)

## Grading Rubric 🎓

**90% Grade:** Successfully recreate all 3 DAGs with good visual quality.

**100% Grade:** Recreate all 3 DAGs with enhanced quality and visual aesthetics (example: use nice fill colors and/or enclose the text in the ellipse completely).

## Submission Checklist ✅

**Minimum Requirements (Required for Any Points):**

- [ ] Created repository named "daftChallenge" in your GitHub account (forked from [https://github.com/flyaflya/daftChallenge](https://github.com/flyaflya/daftChallenge))
- [ ] Cloned repository locally using Cursor (or VS Code)
- [ ] Installed DAFT package successfully
- [ ] Document rendered to HTML successfully
- [ ] HTML files uploaded to your repository
- [ ] GitHub Pages enabled and working
- [ ] Site accessible at `https://[your-username].github.io/daftChallenge/`

**90% Grade Requirements:**

- [ ] Successfully recreate all 3 DAGs
- [ ] Good visual quality with appropriate styling

**100% Grade Requirements:**

- [ ] All DAG recreations completed with professional quality
- [ ] Erase everything but the story of scurvy and the three DAGs (make it a nice concise narrative about scurvy)



